06:04:14.639 INFO  (/mplambda/src/mpl_lambda_pseudo.cpp:5) Hello
06:04:14.639 INFO  (/mplambda/src/mpl_lambda_pseudo.cpp:5) Hello
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:295) using planner: cforest
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:295) using planner: cforest
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:289) using precision: double
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:289) using precision: double
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:250) running scenario: fetch
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:250) running scenario: fetch
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:269) Env frame: 
	-4.37114e-08 1            0            0.38        
	-1           -4.37114e-08 -0           -0.9        
	-0           0            1            0           
	0            0            0            1           
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:269) Env frame: 
	-4.37114e-08 1            0            0.38        
	-1           -4.37114e-08 -0           -0.9        
	-0           0            1            0           
	0            0            0            1           
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:270) Goal: 
	1     0     0     -1.07
	0     1     0     0.16 
	0     0     1     0.88 
	0     0     0     1    
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:270) Goal: 
	1     0     0     -1.07
	0     1     0     0.16 
	0     0     1     0.88 
	0     0     0     1    
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:272) Goal in robot's frame: 
	-4.37114e-08 1            0            0.54        
	-1           -4.37114e-08 -0           0.17        
	0            0            1            0.88        
	0            0            0            1           
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:272) Goal in robot's frame: 
	-4.37114e-08 1            0            0.54        
	-1           -4.37114e-08 -0           0.17        
	0            0            1            0.88        
	0            0            0            1           
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:90) Start function runplanner
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:90) Start function runplanner
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:106) before kvsClient
thread id is 4
anna address is 127.0.0.1
local ip is 127.0.0.1
execution id is solution_key_1595284680.778267
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:106) before kvsClient
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:108) After kvsclient
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:108) After kvsclient
06:04:14.639 WARN  (/mplambda/src/mpl/demo/lambda_common.cpp:111) no coordinator set
06:04:14.639 WARN  (/mplambda/src/mpl/demo/lambda_common.cpp:111) no coordinator set
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:114) setting up planner
06:04:14.639 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:114) setting up planner
06:04:14.641 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:59) name='$MergedNode_0', M=[1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1]
06:04:14.641 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:59) name='$MergedNode_0', M=[1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1]
06:04:14.655 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:286) Loaded mesh "/mplambda/resources/AUTOLAB.dae" AABB={c=[0.215000033378601, -1.4600000679493, 1.19999999925494]^T, r=4.16991, min=[-3.09999990463257, -3.63000011444092, -0.100000001490116]^T, max=[3.52999997138977, 0.709999978542328, 2.5]^T}
06:04:14.655 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:286) Loaded mesh "/mplambda/resources/AUTOLAB.dae" AABB={c=[0.215000033378601, -1.4600000679493, 1.19999999925494]^T, r=4.16991, min=[-3.09999990463257, -3.63000011444092, -0.100000001490116]^T, max=[3.52999997138977, 0.709999978542328, 2.5]^T}
06:04:14.655 INFO  (/mplambda/include/mpl/demo/fetch_scenario.hpp:62) goal tolerance: eps=0.01, L=[1, 1, 1, 1, 1, 0.00318309870211231]^T
06:04:14.655 INFO  (/mplambda/include/mpl/demo/fetch_scenario.hpp:62) goal tolerance: eps=0.01, L=[1, 1, 1, 1, 1, 0.00318309870211231]^T
06:04:14.655 TRACE (/mplambda/include/mpl/pcforest.hpp:471) thread goal bias set to 0.01
06:04:14.655 TRACE (/mplambda/include/mpl/pcforest.hpp:471) thread goal bias set to 0.01
06:04:14.655 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:117) Adding start state: [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
06:04:14.655 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:117) Adding start state: [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
06:04:14.656 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:120) Starting solve()
06:04:14.656 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:120) Starting solve()
06:04:14.656 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:131) judge whether found a solution
06:04:14.656 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:131) judge whether found a solution
06:04:14.656 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:134) found a solution
06:04:14.656 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:134) found a solution
06:04:14.656 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:137) Sync solution keysolution_key_1595284680.778267
06:04:14.656 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:137) Sync solution keysolution_key_1595284680.778267
06:04:14.656 INFO  (/mplambda/include/mpl/pcforest.hpp:225) solving on 1 threads
06:04:14.656 INFO  (/mplambda/include/mpl/pcforest.hpp:225) solving on 1 threads
06:15:58.231 INFO  (/mplambda/include/mpl/pcforest.hpp:125) found initial solution with cost 100.275
06:15:58.231 INFO  (/mplambda/include/mpl/pcforest.hpp:125) found initial solution with cost 100.275
06:15:58.554 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 100.275
06:15:58.554 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 100.275
06:15:58.554 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 100.275
06:15:58.554 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 100.275
06:15:58.554 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 100.275,703.898002846 s
06:15:58.554 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 100.275,703.898002846 s
06:20:09.937 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 92.6521
06:20:09.937 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 92.6521
06:20:11.120 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 92.6521
06:20:11.120 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 92.6521
06:20:11.120 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 92.6521
06:20:11.120 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 92.6521
06:20:11.120 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 92.6521,956.463587728 s
06:20:11.120 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 92.6521,956.463587728 s
06:23:01.880 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 92.6487
06:23:01.880 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 92.6487
06:23:02.128 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 92.6487
06:23:02.128 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 92.6487
06:23:02.128 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 92.6487
06:23:02.128 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 92.6487
06:23:02.128 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 92.6487,1127.471852595 s
06:23:02.128 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 92.6487,1127.471852595 s
06:23:09.901 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 89.3523
06:23:09.901 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 89.3523
06:24:13.171 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 81.9003
06:24:13.171 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 81.9003
06:24:13.853 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 81.9003
06:24:13.853 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 81.9003
06:24:13.853 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 81.9003
06:24:13.853 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 81.9003
06:24:13.853 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 81.9003,1199.196571438 s
06:24:13.853 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 81.9003,1199.196571438 s
08:06:25.085 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution goal reverted, new cost 80.8831
08:06:25.085 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution goal reverted, new cost 80.8831
08:06:25.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 80.8831
08:06:25.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 80.8831
08:06:25.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 80.8831
08:06:25.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 80.8831
08:06:25.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 80.8831,7330.935575836 s
08:06:25.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 80.8831,7330.935575836 s
09:16:28.739 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 79.621
09:16:28.739 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 79.621
09:16:29.522 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 79.621
09:16:29.522 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 79.621
09:16:29.522 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 79.621
09:16:29.522 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 79.621
09:16:29.522 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 79.621,11534.865770580 s
09:16:29.522 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 79.621,11534.865770580 s
09:18:01.919 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution goal reverted, new cost 68.6918
09:18:01.919 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution goal reverted, new cost 68.6918
09:18:01.933 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 68.6918
09:18:01.933 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 68.6918
09:18:01.933 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 68.6918
09:18:01.933 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 68.6918
09:18:01.933 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 68.6918,11627.276625153 s
09:18:01.933 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 68.6918,11627.276625153 s
11:28:17.901 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution goal reverted, new cost 67.5038
11:28:17.901 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution goal reverted, new cost 67.5038
11:28:18.094 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 67.5038
11:28:18.094 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 67.5038
11:28:18.094 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 67.5038
11:28:18.094 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 67.5038
11:28:18.094 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 67.5038,19443.437563904 s
11:28:18.094 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 67.5038,19443.437563904 s
12:52:56.852 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 63.8103
12:52:56.852 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 63.8103
12:52:57.125 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 63.8103
12:52:57.125 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 63.8103
12:52:57.125 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 63.8103
12:52:57.125 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 63.8103
12:52:57.125 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 63.8103,24522.468594870 s
12:52:57.125 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 63.8103,24522.468594870 s
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:232) solution found after 30001.229688306 s
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:232) solution found after 30001.229688306 s
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:233) graph size = 63848
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:233) graph size = 63848
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:234) samples (goal-biased, rejected) = 225614 (798, 0)
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:234) samples (goal-biased, rejected) = 225614 (798, 0)
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.267809160538832, 1.39566465646543, 0.277897581976095, -1.27473886202748, 1.68661002286432, -3.24203276990759, -0.554764982617433, 11.4747632990769]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.267809160538832, 1.39566465646543, 0.277897581976095, -1.27473886202748, 1.68661002286432, -3.24203276990759, -0.554764982617433, 11.4747632990769]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.259881723638026, 0.604285641407887, 0.240624302720592, -4.0927642861993, 1.38053989149151, -2.66910299159398, -0.832745813797831, 11.2174737322851]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.259881723638026, 0.604285641407887, 0.240624302720592, -4.0927642861993, 1.38053989149151, -2.66910299159398, -0.832745813797831, 11.2174737322851]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.249634343142818, 0.283826502945191, 0.243359331031033, -3.9759109860715, 1.36897769847237, -1.21969890032883, 1.38845037194408, 10.7020481932408]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.249634343142818, 0.283826502945191, 0.243359331031033, -3.9759109860715, 1.36897769847237, -1.21969890032883, 1.38845037194408, 10.7020481932408]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.365348342389598, 0.205906995624732, 0.214959168829249, -4.22584499497419, 1.90279378752439, -2.07193973901973, 0.905083284133275, 10.465198012718]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.365348342389598, 0.205906995624732, 0.214959168829249, -4.22584499497419, 1.90279378752439, -2.07193973901973, 0.905083284133275, 10.465198012718]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.370438221703912, -0.816317523191447, 0.957669636972295, -2.53504642847129, 1.68886888537959, -1.03578592895126, 0.637527753760195, 9.96303574928302]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.370438221703912, -0.816317523191447, 0.957669636972295, -2.53504642847129, 1.68886888537959, -1.03578592895126, 0.637527753760195, 9.96303574928302]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.340172108454036, -0.900559751945433, 1.46426011005155, -1.70242513079963, 2.10211810368778, -0.95348037295822, -0.333916592955583, 8.93481827162816]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.340172108454036, -0.900559751945433, 1.46426011005155, -1.70242513079963, 2.10211810368778, -0.95348037295822, -0.333916592955583, 8.93481827162816]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.133320136265442, -1.16472188670591, 1.26514767816644, -3.11727511868219, 2.10184285488227, -0.492330707767387, 1.61564684619695, 4.10363027456312]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.133320136265442, -1.16472188670591, 1.26514767816644, -3.11727511868219, 2.10184285488227, -0.492330707767387, 1.61564684619695, 4.10363027456312]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
14:24:15.886 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
