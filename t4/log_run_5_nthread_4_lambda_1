08:00:17.761 INFO  (/mplambda/src/mpl_lambda_pseudo.cpp:5) Hello
08:00:17.761 INFO  (/mplambda/src/mpl_lambda_pseudo.cpp:5) Hello
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:295) using planner: cforest
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:295) using planner: cforest
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:289) using precision: double
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:289) using precision: double
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:250) running scenario: fetch
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:250) running scenario: fetch
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:269) Env frame: 
	-4.37114e-08 1            0            0.38        
	-1           -4.37114e-08 -0           -0.9        
	-0           0            1            0           
	0            0            0            1           
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:269) Env frame: 
	-4.37114e-08 1            0            0.38        
	-1           -4.37114e-08 -0           -0.9        
	-0           0            1            0           
	0            0            0            1           
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:270) Goal: 
	1     0     0     -1.07
	0     1     0     0.16 
	0     0     1     0.88 
	0     0     0     1    
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:270) Goal: 
	1     0     0     -1.07
	0     1     0     0.16 
	0     0     1     0.88 
	0     0     0     1    
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:272) Goal in robot's frame: 
	-4.37114e-08 1            0            0.54        
	-1           -4.37114e-08 -0           0.17        
	0            0            1            0.88        
	0            0            0            1           
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:272) Goal in robot's frame: 
	-4.37114e-08 1            0            0.54        
	-1           -4.37114e-08 -0           0.17        
	0            0            1            0.88        
	0            0            0            1           
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:90) Start function runplanner
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:90) Start function runplanner
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:106) before kvsClient
thread id is 1
anna address is 127.0.0.1
local ip is 127.0.0.1
execution id is solution_key_1595284680.778267
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:106) before kvsClient
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:108) After kvsclient
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:108) After kvsclient
08:00:17.761 WARN  (/mplambda/src/mpl/demo/lambda_common.cpp:111) no coordinator set
08:00:17.761 WARN  (/mplambda/src/mpl/demo/lambda_common.cpp:111) no coordinator set
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:114) setting up planner
08:00:17.761 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:114) setting up planner
08:00:17.763 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:59) name='$MergedNode_0', M=[1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1]
08:00:17.763 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:59) name='$MergedNode_0', M=[1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1]
08:00:17.789 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:286) Loaded mesh "/mplambda/resources/AUTOLAB.dae" AABB={c=[0.215000033378601, -1.4600000679493, 1.19999999925494]^T, r=4.16991, min=[-3.09999990463257, -3.63000011444092, -0.100000001490116]^T, max=[3.52999997138977, 0.709999978542328, 2.5]^T}
08:00:17.789 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:286) Loaded mesh "/mplambda/resources/AUTOLAB.dae" AABB={c=[0.215000033378601, -1.4600000679493, 1.19999999925494]^T, r=4.16991, min=[-3.09999990463257, -3.63000011444092, -0.100000001490116]^T, max=[3.52999997138977, 0.709999978542328, 2.5]^T}
08:00:17.789 INFO  (/mplambda/include/mpl/demo/fetch_scenario.hpp:62) goal tolerance: eps=0.01, L=[1, 1, 1, 1, 1, 0.00318309870211231]^T
08:00:17.789 INFO  (/mplambda/include/mpl/demo/fetch_scenario.hpp:62) goal tolerance: eps=0.01, L=[1, 1, 1, 1, 1, 0.00318309870211231]^T
08:00:17.790 TRACE (/mplambda/include/mpl/pcforest.hpp:471) thread goal bias set to 0.04
08:00:17.790 TRACE (/mplambda/include/mpl/pcforest.hpp:471) thread goal bias set to 0.04
08:00:17.790 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:117) Adding start state: [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
08:00:17.790 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:117) Adding start state: [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
08:00:17.790 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:120) Starting solve()
08:00:17.790 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:120) Starting solve()
08:00:17.790 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:131) judge whether found a solution
08:00:17.790 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:131) judge whether found a solution
08:00:17.790 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:134) found a solution
08:00:17.790 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:134) found a solution
08:00:17.790 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:137) Sync solution keysolution_key_1595284680.778267
08:00:17.790 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:137) Sync solution keysolution_key_1595284680.778267
08:00:17.790 INFO  (/mplambda/include/mpl/pcforest.hpp:225) solving on 4 threads
08:00:17.790 INFO  (/mplambda/include/mpl/pcforest.hpp:225) solving on 4 threads
08:11:07.848 INFO  (/mplambda/include/mpl/pcforest.hpp:125) found initial solution with cost 76.2682
08:11:07.848 INFO  (/mplambda/include/mpl/pcforest.hpp:125) found initial solution with cost 76.2682
08:11:07.848 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 76.2682
08:11:07.848 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 76.2682
08:11:07.848 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 76.2682
08:11:07.848 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 76.2682
08:11:07.848 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 76.2682,650.057796308 s
08:11:07.848 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 76.2682,650.057796308 s
08:12:04.523 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 71.8005
08:12:04.523 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 71.8005
08:12:04.523 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 69.464
08:12:04.523 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 69.464
08:12:05.274 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 67.5074
08:12:05.274 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 67.5074
08:12:06.483 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 67.5074
08:12:06.483 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 67.5074
08:12:06.483 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 67.5074
08:12:06.483 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 67.5074
08:12:06.483 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 67.5074,708.692953497 s
08:12:06.483 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 67.5074,708.692953497 s
08:12:18.278 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 63.0248
08:12:18.278 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 63.0248
08:12:18.630 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 63.0248
08:12:18.630 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 63.0248
08:12:18.630 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 63.0248
08:12:18.630 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 63.0248
08:12:18.630 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 63.0248,720.839388200 s
08:12:18.630 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 63.0248,720.839388200 s
08:16:02.050 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution goal reverted, new cost 60.295
08:16:02.050 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution goal reverted, new cost 60.295
08:16:02.063 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 60.295
08:16:02.063 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 60.295
08:16:02.063 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 60.295
08:16:02.063 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 60.295
08:16:02.063 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 60.295,944.272472356 s
08:16:02.063 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 60.295,944.272472356 s
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:232) solution found after 3000.801502994 s
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:232) solution found after 3000.801502994 s
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:233) graph size = 25184
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:233) graph size = 25184
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:234) samples (goal-biased, rejected) = 94673 (320, 0)
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:234) samples (goal-biased, rejected) = 94673 (320, 0)
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.252144142471727, 0.453514146905497, 1.47564907597292, 2.78858500672821, 2.1090317488453, 11.2247283117734, -1.30942320258856, 10.3460401543042]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.252144142471727, 0.453514146905497, 1.47564907597292, 2.78858500672821, 2.1090317488453, 11.2247283117734, -1.30942320258856, 10.3460401543042]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.311754728176778, 0.532995662567311, 1.02060794287656, 1.54541375588848, 2.14055362043564, 9.00569910216296, -0.573672742169281, 9.6205194032345]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.311754728176778, 0.532995662567311, 1.02060794287656, 1.54541375588848, 2.14055362043564, 9.00569910216296, -0.573672742169281, 9.6205194032345]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.181598522918591, 0.896041479313856, 0.625513374239982, 1.35447872836774, 1.31655200315702, 5.18561012183628, -0.20741671762572, 11.8000546452698]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.181598522918591, 0.896041479313856, 0.625513374239982, 1.35447872836774, 1.31655200315702, 5.18561012183628, -0.20741671762572, 11.8000546452698]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.242663693633924, 1.08062340543504, 0.172860051516351, 2.20648300860621, 0.625452393087686, 2.52898821157966, -0.0184101692384053, 11.444120309796]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.242663693633924, 1.08062340543504, 0.172860051516351, 2.20648300860621, 0.625452393087686, 2.52898821157966, -0.0184101692384053, 11.444120309796]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.362584303960036, 1.40378942038634, 0.0403949672365267, 0.231552508774746, 1.27719934556014, 2.25094857607905, -0.630654724997476, 9.7397963740875]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.362584303960036, 1.40378942038634, 0.0403949672365267, 0.231552508774746, 1.27719934556014, 2.25094857607905, -0.630654724997476, 9.7397963740875]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.198079501501786, 1.15249164846597, 0.624778944234162, -0.525063579800962, 1.72220882854878, 1.78133481157617, -0.609143401490227, 10.5875178339551]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.198079501501786, 1.15249164846597, 0.624778944234162, -0.525063579800962, 1.72220882854878, 1.78133481157617, -0.609143401490227, 10.5875178339551]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.187455142868081, 1.04914902655691, 1.16852553780493, -0.85333505061708, 1.68958903641626, 0.477690504861876, 1.55626360282405, 1.8158384714437]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.187455142868081, 1.04914902655691, 1.16852553780493, -0.85333505061708, 1.68958903641626, 0.477690504861876, 1.55626360282405, 1.8158384714437]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
08:50:18.592 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
