02:59:56.307 INFO  (/mplambda/src/mpl_lambda_pseudo.cpp:5) Hello
02:59:56.307 INFO  (/mplambda/src/mpl_lambda_pseudo.cpp:5) Hello
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:295) using planner: cforest
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:295) using planner: cforest
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:289) using precision: double
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:289) using precision: double
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:250) running scenario: fetch
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:250) running scenario: fetch
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:269) Env frame: 
	-4.37114e-08 1            0            0.38        
	-1           -4.37114e-08 -0           -0.9        
	-0           0            1            0           
	0            0            0            1           
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:269) Env frame: 
	-4.37114e-08 1            0            0.38        
	-1           -4.37114e-08 -0           -0.9        
	-0           0            1            0           
	0            0            0            1           
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:270) Goal: 
	1     0     0     -1.07
	0     1     0     0.16 
	0     0     1     0.88 
	0     0     0     1    
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:270) Goal: 
	1     0     0     -1.07
	0     1     0     0.16 
	0     0     1     0.88 
	0     0     0     1    
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:272) Goal in robot's frame: 
	-4.37114e-08 1            0            0.54        
	-1           -4.37114e-08 -0           0.17        
	0            0            1            0.88        
	0            0            0            1           
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:272) Goal in robot's frame: 
	-4.37114e-08 1            0            0.54        
	-1           -4.37114e-08 -0           0.17        
	0            0            1            0.88        
	0            0            0            1           
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:90) Start function runplanner
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:90) Start function runplanner
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:106) before kvsClient
thread id is 2
anna address is 127.0.0.1
local ip is 127.0.0.1
execution id is solution_key_1595284680.778267
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:106) before kvsClient
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:108) After kvsclient
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:108) After kvsclient
02:59:56.307 WARN  (/mplambda/src/mpl/demo/lambda_common.cpp:111) no coordinator set
02:59:56.307 WARN  (/mplambda/src/mpl/demo/lambda_common.cpp:111) no coordinator set
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:114) setting up planner
02:59:56.307 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:114) setting up planner
02:59:56.310 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:59) name='$MergedNode_0', M=[1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1]
02:59:56.310 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:59) name='$MergedNode_0', M=[1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1]
02:59:56.323 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:286) Loaded mesh "/mplambda/resources/AUTOLAB.dae" AABB={c=[0.215000033378601, -1.4600000679493, 1.19999999925494]^T, r=4.16991, min=[-3.09999990463257, -3.63000011444092, -0.100000001490116]^T, max=[3.52999997138977, 0.709999978542328, 2.5]^T}
02:59:56.323 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:286) Loaded mesh "/mplambda/resources/AUTOLAB.dae" AABB={c=[0.215000033378601, -1.4600000679493, 1.19999999925494]^T, r=4.16991, min=[-3.09999990463257, -3.63000011444092, -0.100000001490116]^T, max=[3.52999997138977, 0.709999978542328, 2.5]^T}
02:59:56.323 INFO  (/mplambda/include/mpl/demo/fetch_scenario.hpp:62) goal tolerance: eps=0.01, L=[1, 1, 1, 1, 1, 0.00318309870211231]^T
02:59:56.323 INFO  (/mplambda/include/mpl/demo/fetch_scenario.hpp:62) goal tolerance: eps=0.01, L=[1, 1, 1, 1, 1, 0.00318309870211231]^T
02:59:56.323 TRACE (/mplambda/include/mpl/pcforest.hpp:471) thread goal bias set to 0.01
02:59:56.323 TRACE (/mplambda/include/mpl/pcforest.hpp:471) thread goal bias set to 0.01
02:59:56.323 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:117) Adding start state: [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
02:59:56.323 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:117) Adding start state: [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
02:59:56.324 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:120) Starting solve()
02:59:56.324 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:120) Starting solve()
02:59:56.324 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:131) judge whether found a solution
02:59:56.324 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:131) judge whether found a solution
02:59:56.324 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:134) found a solution
02:59:56.324 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:134) found a solution
02:59:56.324 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:137) Sync solution keysolution_key_1595284680.778267
02:59:56.324 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:137) Sync solution keysolution_key_1595284680.778267
02:59:56.324 INFO  (/mplambda/include/mpl/pcforest.hpp:225) solving on 1 threads
02:59:56.324 INFO  (/mplambda/include/mpl/pcforest.hpp:225) solving on 1 threads
03:04:36.424 INFO  (/mplambda/include/mpl/pcforest.hpp:125) found initial solution with cost 130.726
03:04:36.424 INFO  (/mplambda/include/mpl/pcforest.hpp:125) found initial solution with cost 130.726
03:04:36.424 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 130.726
03:04:36.424 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 130.726
03:04:36.424 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 130.726
03:04:36.424 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 130.726
03:04:36.424 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 130.726,280.099872158 s
03:04:36.424 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 130.726,280.099872158 s
03:04:37.686 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 129.065
03:04:37.686 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 129.065
03:04:38.254 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 121.614
03:04:38.254 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 121.614
03:04:44.345 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 106.487
03:04:44.345 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 106.487
03:04:50.199 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 106.335
03:04:50.199 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 106.335
03:04:51.660 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 106.335
03:04:51.660 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 106.335
03:04:51.660 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 106.335
03:04:51.660 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 106.335
03:04:51.660 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 106.335,295.335894675 s
03:04:51.660 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 106.335,295.335894675 s
03:04:51.800 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 96.9881
03:04:51.800 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 96.9881
03:05:30.675 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 94.6344
03:05:30.675 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 94.6344
03:10:54.519 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 94.0605
03:10:54.519 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 94.0605
03:10:54.845 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 94.0605
03:10:54.845 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 94.0605
03:10:54.845 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 94.0605
03:10:54.845 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 94.0605
03:10:54.845 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 94.0605,658.520646185 s
03:10:54.845 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 94.0605,658.520646185 s
03:16:21.350 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 89.9297
03:16:21.350 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 89.9297
03:16:21.357 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 89.9297
03:16:21.357 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 89.9297
03:16:21.357 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 89.9297
03:16:21.357 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 89.9297
03:16:21.357 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 89.9297,985.032779259 s
03:16:21.357 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 89.9297,985.032779259 s
03:21:26.966 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 88.7621
03:21:26.966 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 88.7621
03:21:27.240 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 88.7621
03:21:27.240 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:59) putting path with cost 88.7621
03:21:27.240 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 88.7621
03:21:27.240 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:204) solution length = 88.7621
03:21:27.240 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 88.7621,1290.916407554 s
03:21:27.240 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:205) Get solution with cost 88.7621,1290.916407554 s
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:232) solution found after 3000.031303075 s
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:232) solution found after 3000.031303075 s
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:233) graph size = 5083
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:233) graph size = 5083
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:234) samples (goal-biased, rejected) = 21657 (64, 0)
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:234) samples (goal-biased, rejected) = 21657 (64, 0)
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.365999957098096, 1.56028981825004, 0.834829481109861, -7.55345529112189, 1.77045195956569, -10.7770567636935, -0.0704311081042629, -5.62830438944354]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.365999957098096, 1.56028981825004, 0.834829481109861, -7.55345529112189, 1.77045195956569, -10.7770567636935, -0.0704311081042629, -5.62830438944354]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.348789115054008, 0.905155568502458, 0.788935421271562, -8.74181138780856, 2.07898789876682, -10.4144363434051, 1.35611753889536, -2.53416246654447]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.348789115054008, 0.905155568502458, 0.788935421271562, -8.74181138780856, 2.07898789876682, -10.4144363434051, 1.35611753889536, -2.53416246654447]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.381461848064139, 0.747668380977559, -0.0575120163228784, -9.24635064432743, 1.94545500752945, -9.04515716024744, 0.644004403404151, -2.54097782512166]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.381461848064139, 0.747668380977559, -0.0575120163228784, -9.24635064432743, 1.94545500752945, -9.04515716024744, 0.644004403404151, -2.54097782512166]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.144034167559761, -0.151312857117899, -0.664347368677542, -7.50551848676588, 1.99867471399874, -8.72662755189995, 1.08507878299012, -1.35344197631912]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.144034167559761, -0.151312857117899, -0.664347368677542, -7.50551848676588, 1.99867471399874, -8.72662755189995, 1.08507878299012, -1.35344197631912]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.168318475494325, -0.811976428275903, -0.591898471917355, -7.65916492408056, 1.93099704171522, -6.42534795915962, -0.101895307224258, -1.35801076674095]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.168318475494325, -0.811976428275903, -0.591898471917355, -7.65916492408056, 1.93099704171522, -6.42534795915962, -0.101895307224258, -1.35801076674095]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.205092561508521, -0.751616065772986, -0.422991122024992, -6.98266636941757, -1.38690656764274, -5.64756627363508, -0.203625261557463, -4.23925032429098]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.205092561508521, -0.751616065772986, -0.422991122024992, -6.98266636941757, -1.38690656764274, -5.64756627363508, -0.203625261557463, -4.23925032429098]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.0981401470645416, -0.827961543639268, -0.427400773862409, -2.36915333078027, 0.992936180491691, -5.05667471223207, -0.026120200593267, -2.53743629187069]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.0981401470645416, -0.827961543639268, -0.427400773862409, -2.36915333078027, 0.992936180491691, -5.05667471223207, -0.026120200593267, -2.53743629187069]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.117650713187824, -1.08176513335108, 1.35471283720304, -1.83315814593806, 1.85272410110244, -1.50616136004244, -0.7347017966639, 3.39503805998873]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.117650713187824, -1.08176513335108, 1.35471283720304, -1.83315814593806, 1.85272410110244, -1.50616136004244, -0.7347017966639, 3.39503805998873]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
03:49:56.355 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
