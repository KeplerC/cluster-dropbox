21:02:44.748 INFO  (/mplambda/src/mpl_lambda_pseudo.cpp:5) Hello
21:02:44.748 INFO  (/mplambda/src/mpl_lambda_pseudo.cpp:5) Hello
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:302) using planner: cforest
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:302) using planner: cforest
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:296) using precision: double
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:296) using precision: double
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:257) running scenario: fetch
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:257) running scenario: fetch
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:276) Env frame: 
	-4.37114e-08 1            0            0.38        
	-1           -4.37114e-08 -0           -0.9        
	-0           0            1            0           
	0            0            0            1           
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:276) Env frame: 
	-4.37114e-08 1            0            0.38        
	-1           -4.37114e-08 -0           -0.9        
	-0           0            1            0           
	0            0            0            1           
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:277) Goal: 
	1     0     0     -1.07
	0     1     0     0.16 
	0     0     1     0.88 
	0     0     0     1    
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:277) Goal: 
	1     0     0     -1.07
	0     1     0     0.16 
	0     0     1     0.88 
	0     0     0     1    
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:279) Goal in robot's frame: 
	-4.37114e-08 1            0            0.54        
	-1           -4.37114e-08 -0           0.17        
	0            0            1            0.88        
	0            0            0            1           
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:279) Goal in robot's frame: 
	-4.37114e-08 1            0            0.54        
	-1           -4.37114e-08 -0           0.17        
	0            0            1            0.88        
	0            0            0            1           
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:91) Start function runplanner
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:91) Start function runplanner
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:107) before kvsClient
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:107) before kvsClient
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:109) After kvsclient
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:109) After kvsclient
21:02:44.748 WARN  (/mplambda/src/mpl/demo/lambda_common.cpp:112) no coordinator set
21:02:44.748 WARN  (/mplambda/src/mpl/demo/lambda_common.cpp:112) no coordinator set
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:115) setting up planner
21:02:44.748 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:115) setting up planner
21:02:44.751 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:59) name='$MergedNode_0', M=[1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1]
21:02:44.751 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:59) name='$MergedNode_0', M=[1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1]
21:02:44.768 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:286) Loaded mesh "/mplambda/resources/AUTOLAB.dae" AABB={c=[0.215000033378601, -1.4600000679493, 1.19999999925494]^T, r=4.16991, min=[-3.09999990463257, -3.63000011444092, -0.100000001490116]^T, max=[3.52999997138977, 0.709999978542328, 2.5]^T}
21:02:44.768 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:286) Loaded mesh "/mplambda/resources/AUTOLAB.dae" AABB={c=[0.215000033378601, -1.4600000679493, 1.19999999925494]^T, r=4.16991, min=[-3.09999990463257, -3.63000011444092, -0.100000001490116]^T, max=[3.52999997138977, 0.709999978542328, 2.5]^T}
21:02:44.768 INFO  (/mplambda/include/mpl/demo/fetch_scenario.hpp:62) goal tolerance: eps=0.01, L=[1, 1, 1, 1, 1, 0.00318309870211231]^T
21:02:44.768 INFO  (/mplambda/include/mpl/demo/fetch_scenario.hpp:62) goal tolerance: eps=0.01, L=[1, 1, 1, 1, 1, 0.00318309870211231]^T
21:02:44.769 TRACE (/mplambda/include/mpl/pcforest.hpp:471) thread goal bias set to 0.02
21:02:44.769 TRACE (/mplambda/include/mpl/pcforest.hpp:471) thread goal bias set to 0.02
21:02:44.769 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:118) Adding start state: [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
21:02:44.769 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:118) Adding start state: [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
21:02:44.769 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:121) Starting solve()
21:02:44.769 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:121) Starting solve()
21:02:44.769 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:132) judge whether found a solution
21:02:44.769 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:132) judge whether found a solution
21:02:44.769 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:135) found a solution
21:02:44.769 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:135) found a solution
21:02:44.769 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:138) Sync solution keysolution_key_1596747764.73483730.6875504544395918
21:02:44.769 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:138) Sync solution keysolution_key_1596747764.73483730.6875504544395918
21:02:44.770 INFO  (/mplambda/include/mpl/pcforest.hpp:225) solving on 2 threads
21:02:44.770 INFO  (/mplambda/include/mpl/pcforest.hpp:225) solving on 2 threads
21:05:42.546 INFO  (/mplambda/include/mpl/pcforest.hpp:125) found initial solution with cost 78.0702
21:05:42.546 INFO  (/mplambda/include/mpl/pcforest.hpp:125) found initial solution with cost 78.0702
21:05:42.547 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:60) putting path with cost 78.0702
21:05:42.547 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:60) putting path with cost 78.0702
21:05:42.547 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:211) solution length = 78.0702
21:05:42.547 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:211) solution length = 78.0702
21:05:42.547 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:212) Get solution with cost 78.0702,177.777244236 s
21:05:42.547 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:212) Get solution with cost 78.0702,177.777244236 s
21:05:46.715 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 69.025
21:05:46.715 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 69.025
21:05:54.997 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 57.7343
21:05:54.997 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 57.7343
21:06:09.625 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 54.6984
21:06:09.625 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 54.6984
21:06:32.013 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 51.2029
21:06:32.013 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 51.2029
21:06:34.676 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:60) putting path with cost 51.2029
21:06:34.676 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:60) putting path with cost 51.2029
21:06:34.676 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:211) solution length = 51.2029
21:06:34.676 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:211) solution length = 51.2029
21:06:34.676 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:212) Get solution with cost 51.2029,229.906391349 s
21:06:34.676 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:212) Get solution with cost 51.2029,229.906391349 s
21:08:01.992 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 50.5258
21:08:01.992 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 50.5258
21:08:01.992 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 43.3348
21:08:01.992 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 43.3348
21:08:13.171 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 35.6928
21:08:13.171 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 35.6928
21:18:25.858 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution goal reverted, new cost 27.2305
21:18:25.858 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution goal reverted, new cost 27.2305
21:22:29.435 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution goal reverted, new cost 24.8234
21:22:29.435 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution goal reverted, new cost 24.8234
22:42:45.643 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:239) solution found after 6000.874032697 s
22:42:45.643 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:239) solution found after 6000.874032697 s
22:42:45.643 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:240) graph size = 10973
22:42:45.643 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:240) graph size = 10973
22:42:45.643 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:241) samples (goal-biased, rejected) = 47585 (161, 0)
22:42:45.643 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:241) samples (goal-biased, rejected) = 47585 (161, 0)
22:42:45.644 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:249)   [0.197011707037009, 1.43864330918875, 0.176128214238179, 1.81734801119873, -2.03840951497796, -2.17881720447255, -0.209101904583273, 0.859300551727262]^T
22:42:45.644 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:249)   [0.197011707037009, 1.43864330918875, 0.176128214238179, 1.81734801119873, -2.03840951497796, -2.17881720447255, -0.209101904583273, 0.859300551727262]^T
22:42:45.644 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:249)   [0.32288308084018, 1.60491783861536, -0.153456228889892, 1.64150679480175, -2.1868054107651, -0.989357589806636, 0.102223255746361, 2.26588997121552]^T
22:42:45.644 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:249)   [0.32288308084018, 1.60491783861536, -0.153456228889892, 1.64150679480175, -2.1868054107651, -0.989357589806636, 0.102223255746361, 2.26588997121552]^T
22:42:45.644 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:249)   [0.180812952770305, 1.57422450709004, -0.33374437873895, -0.425319946051641, 2.01280068462212, -1.23388220976078, 0.0386144218153546, 1.17317938504645]^T
22:42:45.644 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:249)   [0.180812952770305, 1.57422450709004, -0.33374437873895, -0.425319946051641, 2.01280068462212, -1.23388220976078, 0.0386144218153546, 1.17317938504645]^T
22:42:45.644 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:249)   [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
22:42:45.644 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:249)   [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
