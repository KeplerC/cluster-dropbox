00:12:21.767 INFO  (/mplambda/src/mpl_lambda_pseudo.cpp:5) Hello
00:12:21.767 INFO  (/mplambda/src/mpl_lambda_pseudo.cpp:5) Hello
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:295) using planner: cforest
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:295) using planner: cforest
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:289) using precision: double
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:289) using precision: double
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:250) running scenario: fetch
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:250) running scenario: fetch
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:269) Env frame: 
	-4.37114e-08 1            0            0.38        
	-1           -4.37114e-08 -0           -0.9        
	-0           0            1            0           
	0            0            0            1           
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:269) Env frame: 
	-4.37114e-08 1            0            0.38        
	-1           -4.37114e-08 -0           -0.9        
	-0           0            1            0           
	0            0            0            1           
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:270) Goal: 
	1     0     0     -1.07
	0     1     0     0.16 
	0     0     1     0.88 
	0     0     0     1    
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:270) Goal: 
	1     0     0     -1.07
	0     1     0     0.16 
	0     0     1     0.88 
	0     0     0     1    
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:272) Goal in robot's frame: 
	-4.37114e-08 1            0            0.54        
	-1           -4.37114e-08 -0           0.17        
	0            0            1            0.88        
	0            0            0            1           
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:272) Goal in robot's frame: 
	-4.37114e-08 1            0            0.54        
	-1           -4.37114e-08 -0           0.17        
	0            0            1            0.88        
	0            0            0            1           
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:90) Start function runplanner
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:90) Start function runplanner
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:106) before kvsClient
thread id is 0
anna address is 127.0.0.1
local ip is 127.0.0.1
execution id is solution_key_1595284680.778267
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:106) before kvsClient
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:108) After kvsclient
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:108) After kvsclient
00:12:21.767 WARN  (/mplambda/src/mpl/demo/lambda_common.cpp:111) no coordinator set
00:12:21.767 WARN  (/mplambda/src/mpl/demo/lambda_common.cpp:111) no coordinator set
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:114) setting up planner
00:12:21.767 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:114) setting up planner
00:12:21.769 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:59) name='$MergedNode_0', M=[1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1]
00:12:21.769 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:59) name='$MergedNode_0', M=[1, 0, 0, 0,  0, 1, 0, 0,  0, 0, 1, 0,  0, 0, 0, 1]
00:12:21.783 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:286) Loaded mesh "/mplambda/resources/AUTOLAB.dae" AABB={c=[0.215000033378601, -1.4600000679493, 1.19999999925494]^T, r=4.16991, min=[-3.09999990463257, -3.63000011444092, -0.100000001490116]^T, max=[3.52999997138977, 0.709999978542328, 2.5]^T}
00:12:21.783 INFO  (/mplambda/include/mpl/demo/load_mesh.hpp:286) Loaded mesh "/mplambda/resources/AUTOLAB.dae" AABB={c=[0.215000033378601, -1.4600000679493, 1.19999999925494]^T, r=4.16991, min=[-3.09999990463257, -3.63000011444092, -0.100000001490116]^T, max=[3.52999997138977, 0.709999978542328, 2.5]^T}
00:12:21.783 INFO  (/mplambda/include/mpl/demo/fetch_scenario.hpp:62) goal tolerance: eps=0.01, L=[1, 1, 1, 1, 1, 0.00318309870211231]^T
00:12:21.783 INFO  (/mplambda/include/mpl/demo/fetch_scenario.hpp:62) goal tolerance: eps=0.01, L=[1, 1, 1, 1, 1, 0.00318309870211231]^T
00:12:21.783 TRACE (/mplambda/include/mpl/pcforest.hpp:471) thread goal bias set to 0.01
00:12:21.783 TRACE (/mplambda/include/mpl/pcforest.hpp:471) thread goal bias set to 0.01
00:12:21.783 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:117) Adding start state: [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
00:12:21.783 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:117) Adding start state: [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
00:12:21.784 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:120) Starting solve()
00:12:21.784 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:120) Starting solve()
00:12:21.784 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:131) judge whether found a solution
00:12:21.784 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:131) judge whether found a solution
00:12:21.784 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:134) found a solution
00:12:21.784 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:134) found a solution
00:12:21.784 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:137) Sync solution keysolution_key_1595284680.778267
00:12:21.784 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:137) Sync solution keysolution_key_1595284680.778267
00:12:21.784 INFO  (/mplambda/include/mpl/pcforest.hpp:225) solving on 1 threads
00:12:21.784 INFO  (/mplambda/include/mpl/pcforest.hpp:225) solving on 1 threads
00:17:20.839 INFO  (/mplambda/include/mpl/pcforest.hpp:125) found initial solution with cost 124.646
00:17:20.839 INFO  (/mplambda/include/mpl/pcforest.hpp:125) found initial solution with cost 124.646
00:17:26.668 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 56.7293
00:17:26.668 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 56.7293
00:17:42.330 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 49.9515
00:17:42.330 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 49.9515
00:52:36.657 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution goal reverted, new cost 43.3212
00:52:36.657 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution goal reverted, new cost 43.3212
00:52:39.392 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 42.865
00:52:39.392 INFO  (/mplambda/include/mpl/pcforest.hpp:125) solution improved, new cost 42.865
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:232) solution found after 3000.263162992 s
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:232) solution found after 3000.263162992 s
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:233) graph size = 5306
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:233) graph size = 5306
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:234) samples (goal-biased, rejected) = 22135 (80, 0)
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:234) samples (goal-biased, rejected) = 22135 (80, 0)
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.214764038960024, 1.46765227297651, 0.361388505023392, 1.73493799242629, -1.98737143094784, 3.45509457686728, -0.033695483327826, -4.62271636958745]^T
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.214764038960024, 1.46765227297651, 0.361388505023392, 1.73493799242629, -1.98737143094784, 3.45509457686728, -0.033695483327826, -4.62271636958745]^T
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.324111347364031, 1.50293055828256, 0.303468887607513, -1.88675410099021, -2.04781288945482, 2.3603286235787, -0.00356510383857866, -1.70689276439651]^T
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.324111347364031, 1.50293055828256, 0.303468887607513, -1.88675410099021, -2.04781288945482, 2.3603286235787, -0.00356510383857866, -1.70689276439651]^T
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.238172581904276, 1.1679388218102, -0.251487278817181, -1.03341863422592, -1.96556759986848, 3.59688835126314, -0.00420963241309291, -2.09886964181008]^T
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.238172581904276, 1.1679388218102, -0.251487278817181, -1.03341863422592, -1.96556759986848, 3.59688835126314, -0.00420963241309291, -2.09886964181008]^T
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.241914933829333, 1.41231004983122, 0.858426525417157, -1.16914607205148, -1.21457691063128, 3.59236114169318, 1.27460275989421, 0.49673109748159]^T
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.241914933829333, 1.41231004983122, 0.858426525417157, -1.16914607205148, -1.21457691063128, 3.59236114169318, 1.27460275989421, 0.49673109748159]^T
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.168365307863255, 1.47890168818121, 0.885375020566622, -4.28148364607156, 1.05280463823997, 4.31685659706212, 1.78379316757798, 0.310229951833159]^T
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.168365307863255, 1.47890168818121, 0.885375020566622, -4.28148364607156, 1.05280463823997, 4.31685659706212, 1.78379316757798, 0.310229951833159]^T
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
01:02:22.047 INFO  (/mplambda/src/mpl/demo/lambda_common.cpp:242)   [0.100000001490116, 1.57079637050629, 1.57079637050629, 0, 1.57079637050629, 0, 1.57079637050629, 0]^T
